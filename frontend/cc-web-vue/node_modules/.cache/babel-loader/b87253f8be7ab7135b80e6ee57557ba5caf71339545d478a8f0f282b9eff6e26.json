{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"天气查询\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"请输入城市编码\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.fetchWeatherData && $options.fetchWeatherData(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.city]]), $data.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.weatherData.city) + \" - 实时天气\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"天气现象: \" + _toDisplayString($data.weatherData.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"温度: \" + _toDisplayString($data.weatherData.temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风向: \" + _toDisplayString($data.weatherData.wind), 1 /* TEXT */), _createElementVNode(\"p\", null, \"湿度: \" + _toDisplayString($data.weatherData.humidity) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"更新时间: \" + _toDisplayString($data.weatherData.reporttime), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","key","class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","city","placeholder","onKeyup","_withKeys","args","$options","fetchWeatherData","weatherData","_hoisted_2","_toDisplayString","weather","temperature","wind","humidity","reporttime","_createCommentVNode","errorMessage","_hoisted_3"],"sources":["D:\\CC-Web\\frontend\\cc-web-vue\\src\\components\\Weather.vue"],"sourcesContent":["/*<template>\r\n    <div id=\"app\">\r\n      <h1>天气查询</h1>\r\n      <input v-model=\"city\" placeholder=\"请输入城市编码\" @keyup.enter=\"fetchWeatherData\" />\r\n      \r\n      <div v-if=\"weatherData\">\r\n        <h2>{{ weatherData.city }} - 实时天气</h2>\r\n        <p>天气现象: {{ weatherData.weather }}</p>\r\n        <p>温度: {{ weatherData.temperature }}°C</p>\r\n        <p>风向: {{ weatherData.wind }}</p>\r\n        <p>湿度: {{ weatherData.humidity }}%</p>\r\n        <p>更新时间: {{ weatherData.reporttime }}</p>\r\n      </div>\r\n  \r\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n    </div>\r\n  </template>\r\n  */\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'WeatherPage',\r\n    data() {\r\n      return {\r\n        city: '', // 用户输入的城市编码\r\n        weatherData: null, // 存储天气数据\r\n        errorMessage: '', // 错误信息\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchWeatherData() {\r\n        if (this.city) {\r\n          try {\r\n            // 修改为请求 API Gateway 的接口\r\n            const response = await axios.get(`http://localhost:8080/weather?city=${this.city}`);\r\n            console.log(response.data); // 打印返回的数据，查看其结构\r\n  \r\n            // 直接获取天气数据并赋值给 weatherData\r\n            if (response.data && response.data.city) {\r\n              this.weatherData = response.data; // 直接把整个返回的数据赋给 weatherData\r\n              this.errorMessage = ''; // 清空错误信息\r\n            } else {\r\n              this.errorMessage = '未能获取有效的天气数据';\r\n              this.weatherData = null;\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\r\n          }\r\n        } else {\r\n          this.errorMessage = '请输入有效的城市编码';\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .error {\r\n    color: red;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,EAAE,EAAC;AAAK;;EADjBC,GAAA;AAAA;;EAAAA,GAAA;EAc+BC,KAAK,EAAC;;;uBAbjCC,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJC,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAA8E;IAHpF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC,SAAS;IAAEC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAHxDM,SAAA,KAAAC,IAAA,KAGgEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;iEAA1DL,KAAA,CAAAC,IAAI,E,GAETD,KAAA,CAAAQ,WAAW,I,cAAtBb,mBAAA,CAOM,OAZZc,UAAA,GAMQZ,mBAAA,CAAsC,YAAAa,gBAAA,CAA/BV,KAAA,CAAAQ,WAAW,CAACP,IAAI,IAAG,SAAO,iBACjCJ,mBAAA,CAAsC,WAAnC,QAAM,GAAAa,gBAAA,CAAGV,KAAA,CAAAQ,WAAW,CAACG,OAAO,kBAC/Bd,mBAAA,CAA0C,WAAvC,MAAI,GAAAa,gBAAA,CAAGV,KAAA,CAAAQ,WAAW,CAACI,WAAW,IAAG,IAAE,iBACtCf,mBAAA,CAAiC,WAA9B,MAAI,GAAAa,gBAAA,CAAGV,KAAA,CAAAQ,WAAW,CAACK,IAAI,kBAC1BhB,mBAAA,CAAsC,WAAnC,MAAI,GAAAa,gBAAA,CAAGV,KAAA,CAAAQ,WAAW,CAACM,QAAQ,IAAG,GAAC,iBAClCjB,mBAAA,CAAyC,WAAtC,QAAM,GAAAa,gBAAA,CAAGV,KAAA,CAAAQ,WAAW,CAACO,UAAU,iB,KAX1CC,mBAAA,gBAciBhB,KAAA,CAAAiB,YAAY,I,cAAvBtB,mBAAA,CAA+D,OAA/DuB,UAA+D,EAAAR,gBAAA,CAArBV,KAAA,CAAAiB,YAAY,oBAd5DD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}