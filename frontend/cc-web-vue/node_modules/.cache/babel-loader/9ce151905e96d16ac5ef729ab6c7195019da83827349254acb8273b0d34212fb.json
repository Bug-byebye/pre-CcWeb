{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'WeatherPage',\n  data() {\n    return {\n      city: '',\n      // 用户输入的城市编码\n      weatherData: null,\n      // 存储天气数据\n      errorMessage: '' // 错误信息\n    };\n  },\n  methods: {\n    async fetchWeatherData() {\n      if (this.city) {\n        try {\n          // 修改为请求 API Gateway 的接口\n          const response = await axios.get(`http://localhost:8080/weather?city=${this.city}`);\n          console.log(response.data); // 打印返回的数据，查看其结构\n\n          // 直接获取天气数据并赋值给 weatherData\n          if (response.data && response.data.city) {\n            this.weatherData = response.data; // 直接把整个返回的数据赋给 weatherData\n            this.errorMessage = ''; // 清空错误信息\n          } else {\n            this.errorMessage = '未能获取有效的天气数据';\n            this.weatherData = null;\n          }\n        } catch (error) {\n          console.error(error);\n          this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\n        }\n      } else {\n        this.errorMessage = '请输入有效的城市编码';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","city","weatherData","errorMessage","methods","fetchWeatherData","response","get","console","log","error"],"sources":["D:\\CC-Web\\frontend\\cc-web-vue\\src\\components\\Weather.vue"],"sourcesContent":["/*<template>\r\n    <div id=\"app\">\r\n      <h1>天气查询</h1>\r\n      <input v-model=\"city\" placeholder=\"请输入城市编码\" @keyup.enter=\"fetchWeatherData\" />\r\n      \r\n      <div v-if=\"weatherData\">\r\n        <h2>{{ weatherData.city }} - 实时天气</h2>\r\n        <p>天气现象: {{ weatherData.weather }}</p>\r\n        <p>温度: {{ weatherData.temperature }}°C</p>\r\n        <p>风向: {{ weatherData.wind }}</p>\r\n        <p>湿度: {{ weatherData.humidity }}%</p>\r\n        <p>更新时间: {{ weatherData.reporttime }}</p>\r\n      </div>\r\n  \r\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n    </div>\r\n  </template>\r\n  */\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'WeatherPage',\r\n    data() {\r\n      return {\r\n        city: '', // 用户输入的城市编码\r\n        weatherData: null, // 存储天气数据\r\n        errorMessage: '', // 错误信息\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchWeatherData() {\r\n        if (this.city) {\r\n          try {\r\n            // 修改为请求 API Gateway 的接口\r\n            const response = await axios.get(`http://localhost:8080/weather?city=${this.city}`);\r\n            console.log(response.data); // 打印返回的数据，查看其结构\r\n  \r\n            // 直接获取天气数据并赋值给 weatherData\r\n            if (response.data && response.data.city) {\r\n              this.weatherData = response.data; // 直接把整个返回的数据赋给 weatherData\r\n              this.errorMessage = ''; // 清空错误信息\r\n            } else {\r\n              this.errorMessage = '未能获取有效的天气数据';\r\n              this.weatherData = null;\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\r\n          }\r\n        } else {\r\n          this.errorMessage = '请输入有效的城市编码';\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .error {\r\n    color: red;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAmBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MAAE;MACVC,WAAW,EAAE,IAAI;MAAE;MACnBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI,IAAI,CAACJ,IAAI,EAAE;QACb,IAAI;UACF;UACA,MAAMK,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,sCAAsC,IAAI,CAACN,IAAI,EAAE,CAAC;UACnFO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACN,IAAI,CAAC,EAAE;;UAE5B;UACA,IAAIM,QAAQ,CAACN,IAAG,IAAKM,QAAQ,CAACN,IAAI,CAACC,IAAI,EAAE;YACvC,IAAI,CAACC,WAAU,GAAII,QAAQ,CAACN,IAAI,EAAE;YAClC,IAAI,CAACG,YAAW,GAAI,EAAE,EAAE;UAC1B,OAAO;YACL,IAAI,CAACA,YAAW,GAAI,aAAa;YACjC,IAAI,CAACD,WAAU,GAAI,IAAI;UACzB;QACF,EAAE,OAAOQ,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;UACpB,IAAI,CAACP,YAAW,GAAI,sBAAsB;QAC5C;MACF,OAAO;QACL,IAAI,CAACA,YAAW,GAAI,YAAY;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}