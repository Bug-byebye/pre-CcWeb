{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      city: '',\n      // 用户输入的城市编码\n      weatherData: null,\n      // 存储天气数据\n      errorMessage: '' // 错误信息\n    };\n  },\n  methods: {\n    // 获取天气数据\n    async fetchWeatherData() {\n      if (this.city) {\n        try {\n          const response = await axios.get(`http://localhost:8080/api/weather?city=${this.city}`);\n          this.weatherData = response.data.weather[0]; // 获取返回的天气数据\n          this.errorMessage = ''; // 清空错误信息\n        } catch (error) {\n          console.error(error);\n          this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\n        }\n      } else {\n        this.errorMessage = '请输入有效的城市编码';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","city","weatherData","errorMessage","methods","fetchWeatherData","response","get","weather","error","console"],"sources":["D:\\CC-Web\\frontend\\cc-web-vue\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>天气查询</h1>\n    <input v-model=\"city\" placeholder=\"请输入城市编码\" @keyup.enter=\"fetchWeatherData\" />\n    \n    <div v-if=\"weatherData\">\n      <h2>{{ weatherData.city }} - 实时天气</h2>\n      <p>天气现象: {{ weatherData.weather.weather }}</p>\n      <p>温度: {{ weatherData.weather.temperature }}°C</p>\n      <p>风向: {{ weatherData.weather.winddirection }}</p>\n      <p>风力: {{ weatherData.weather.windpower }}</p>\n      <p>湿度: {{ weatherData.weather[0].humidity }}</p>\n      <p>更新时间: {{ weatherData.weather[0].reporttime }}</p>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      city: '', // 用户输入的城市编码\n      weatherData: null, // 存储天气数据\n      errorMessage: '', // 错误信息\n    };\n  },\n  methods: {\n    // 获取天气数据\n    async fetchWeatherData() {\n      if (this.city) {\n        try {\n          const response = await axios.get(`http://localhost:8080/api/weather?city=${this.city}`);\n          this.weatherData = response.data.weather[0]; // 获取返回的天气数据\n          this.errorMessage = ''; // 清空错误信息\n        } catch (error) {\n          console.error(error);\n          this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\n        }\n      } else {\n        this.errorMessage = '请输入有效的城市编码';\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.error {\n  color: red;\n}\n</style>\n"],"mappings":"AAoBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MAAE;MACVC,WAAW,EAAE,IAAI;MAAE;MACnBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI,IAAI,CAACJ,IAAI,EAAE;QACb,IAAI;UACF,MAAMK,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,0CAA0C,IAAI,CAACN,IAAI,EAAE,CAAC;UACvF,IAAI,CAACC,WAAU,GAAII,QAAQ,CAACN,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAE;UAC7C,IAAI,CAACL,YAAW,GAAI,EAAE,EAAE;QAC1B,EAAE,OAAOM,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;UACpB,IAAI,CAACN,YAAW,GAAI,sBAAsB;QAC5C;MACF,OAAO;QACL,IAAI,CAACA,YAAW,GAAI,YAAY;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}