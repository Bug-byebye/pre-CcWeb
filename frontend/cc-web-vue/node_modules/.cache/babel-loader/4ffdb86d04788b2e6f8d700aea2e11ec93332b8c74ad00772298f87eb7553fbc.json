{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"天气查询\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.city = $event),\n    placeholder: \"请输入城市编码\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.fetchWeatherData && _ctx.fetchWeatherData(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.city]]), _ctx.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.weatherData.city) + \" - 实时天气\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"天气现象: \" + _toDisplayString(_ctx.weatherData.weather.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"温度: \" + _toDisplayString(_ctx.weatherData.weather.temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风向: \" + _toDisplayString(_ctx.weatherData.weather.winddirection), 1 /* TEXT */), _createElementVNode(\"p\", null, \"风力: \" + _toDisplayString(_ctx.weatherData.weather.windpower), 1 /* TEXT */), _createElementVNode(\"p\", null, \"湿度: \" + _toDisplayString(_ctx.weatherData.weather.humidity), 1 /* TEXT */), _createElementVNode(\"p\", null, \"更新时间: \" + _toDisplayString(_ctx.weatherData.weather.reporttime), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","key","class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","_ctx","city","placeholder","onKeyup","_withKeys","args","fetchWeatherData","weatherData","_hoisted_2","_toDisplayString","weather","temperature","winddirection","windpower","humidity","reporttime","_createCommentVNode","errorMessage","_hoisted_3"],"sources":["D:\\CC-Web\\frontend\\cc-web-vue\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>天气查询</h1>\n    <input v-model=\"city\" placeholder=\"请输入城市编码\" @keyup.enter=\"fetchWeatherData\" />\n    \n    <div v-if=\"weatherData\">\n      <h2>{{ weatherData.city }} - 实时天气</h2>\n      <p>天气现象: {{ weatherData.weather.weather }}</p>\n      <p>温度: {{ weatherData.weather.temperature }}°C</p>\n      <p>风向: {{ weatherData.weather.winddirection }}</p>\n      <p>风力: {{ weatherData.weather.windpower }}</p>\n      <p>湿度: {{ weatherData.weather.humidity }}</p>\n      <p>更新时间: {{ weatherData.weather.reporttime }}</p>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      city: '', // 用户输入的城市编码\n      weatherData: null, // 存储天气数据\n      errorMessage: '', // 错误信息\n    };\n  },\n  methods: {\n    // 获取天气数据\n    async fetchWeatherData() {\n  if (this.city) {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/weather?city=${this.city}`);\n      console.log(response.data); // 打印返回的数据，查看其结构\n\n      // 检查返回的数据格式\n      if (response.data.lives && Array.isArray(response.data.lives) && response.data.lives.length > 0) {\n        this.weatherData = response.data.lives[0]; // 从 lives 数组中获取第一个天气数据\n        this.errorMessage = ''; // 清空错误信息\n      } else {\n        this.errorMessage = '未能获取有效的天气数据';\n        this.weatherData = null;\n      }\n    } catch (error) {\n      console.error(error);\n      this.errorMessage = '无法获取天气数据，请检查城市编码或重试。';\n    }\n  } else {\n    this.errorMessage = '请输入有效的城市编码';\n  }\n    }\n}\n</script>\n\n<style>\n.error {\n  color: red;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;;EAAAA,GAAA;EAe6BC,KAAK,EAAC;;;uBAdjCC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdJC,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAA8E;IAHlF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,IAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC,SAAS;IAAEC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAHtDM,SAAA,KAAAC,IAAA,KAG8DL,IAAA,CAAAM,gBAAA,IAAAN,IAAA,CAAAM,gBAAA,IAAAD,IAAA,CAAgB;iEAA1DL,IAAA,CAAAC,IAAI,E,GAETD,IAAA,CAAAO,WAAW,I,cAAtBZ,mBAAA,CAQM,OAbVa,UAAA,GAMMX,mBAAA,CAAsC,YAAAY,gBAAA,CAA/BT,IAAA,CAAAO,WAAW,CAACN,IAAI,IAAG,SAAO,iBACjCJ,mBAAA,CAA8C,WAA3C,QAAM,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACA,OAAO,kBACvCb,mBAAA,CAAkD,WAA/C,MAAI,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACC,WAAW,IAAG,IAAE,iBAC9Cd,mBAAA,CAAkD,WAA/C,MAAI,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACE,aAAa,kBAC3Cf,mBAAA,CAA8C,WAA3C,MAAI,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACG,SAAS,kBACvChB,mBAAA,CAA6C,WAA1C,MAAI,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACI,QAAQ,kBACtCjB,mBAAA,CAAiD,WAA9C,QAAM,GAAAY,gBAAA,CAAGT,IAAA,CAAAO,WAAW,CAACG,OAAO,CAACK,UAAU,iB,KAZhDC,mBAAA,gBAeehB,IAAA,CAAAiB,YAAY,I,cAAvBtB,mBAAA,CAA+D,OAA/DuB,UAA+D,EAAAT,gBAAA,CAArBT,IAAA,CAAAiB,YAAY,oBAf1DD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}